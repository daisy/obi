using System;
using System.Collections;
using System.Text;

namespace urakawaApplication
{
    public interface IAudioMediaAsset
    {
        //only support appending to the end of wavefiles
        //throws MediaAssetException
        //input param should, in the end, be of type ByteBuffer (or whatever we call it)
        void appendByteBuffer(Object buf);

        //throws MediaAssetException
        //return value should, in the end, be of type ByteBuffer (or whatever we call it)
        Object getChunk(double byteStartPosition, double byteEndPosition);
         
        // throws MediaAssetException 
        //return value should, in the end, be of type ByteBuffer (or whatever we call it)
        Object getChunk(long timeStartPositionMillis, double timeEndPositionMillis);

        // throws MediaAssetException 
        void deleteChunk(double byteStartPosition, double byteEndPosition);

        // throws MediaAssetException 
        void deleteChunk(long timeStartPositionMillis, long timeEndPositionMillis);

        long getLengthInMillis();
        int getSampleRate();
        int getNumberOfChannels();
        int getBitDepth();
    }
}

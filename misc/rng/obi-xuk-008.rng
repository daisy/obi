<?xml version="1.0"?>

<!-- This is a RELAX NG grammar for the XUK files that Obi outputs -->
<!-- $Id$ -->

<grammar xmlns="http://relaxng.org/ns/structure/1.0"
  xmlns:obi="http://www.daisy.org/urakawa/obi"
  ns="http://www.daisy.org/urakawa/xuk/0.5">

  <start>
    <element name="XUK">
      <ref name="xsi-attrs"/>
      <ref name="metadata"/>
      <ref name="presentation"/>
    </element>
  </start>

  <!-- Allow foreign attributes from the XSI namespace -->
  <define name="xsi-attrs">
    <zeroOrMore>
      <attribute>
        <nsName ns="http://www.w3.org/2001/XMLSchema-instance"/>
      </attribute>
    </zeroOrMore>
  </define>

  <define name="metadata">
    <element name="ProjectMetadata">
      <oneOrMore>
        <ref name="dc-or-dtb-metadata"/>
      </oneOrMore>
      <ref name="obi-metadata-assetsdir"/>
      <ref name="obi-metadata-xukversion"/>
    </element>
  </define>

  <!-- For simplicity, dc-or-dtb-metadata allows anything prefixed by dc: or
  dtb:. We could be more strict here in the future. These elements are used in
  the same way than in DAISY so they can be translated without any problem. -->
  <!-- Note: we do not really export dtb: metadata yet but we might. -->
  <define name="dc-or-dtb-metadata">
    <element name="Metadata">
      <attribute name="name">
        <choice>
          <data datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
            type="string">
            <param name="pattern">dc:.*</param>
          </data>
          <data datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
            type="string">
            <param name="pattern">dtb:.*</param>
          </data>
        </choice>
      </attribute>
      <attribute name="content"/>
      <attribute name="scheme"/>
      <empty/>
    </element>
  </define>

  <!-- The directory in which the assets (audio clip files) can be found. All
  clip references are relative to this path, which is relative to the XUK file
  location. -->
  <define name="obi-metadata-assetsdir">
    <element name="Metadata">
      <attribute name="name">
        <value type="string">obi:assetsdir</value>
      </attribute>
      <attribute name="content"/>
      <attribute name="scheme">
        <value type="string"></value>
      </attribute>
      <empty/>
    </element>
  </define>

  <define name="obi-metadata-xukversion">
    <element name="Metadata">
      <attribute name="name">
        <value type="string">obi:xukversion</value>
      </attribute>
      <attribute name="content">
        <value type="string">obi-xuk-008</value>
      </attribute>
      <attribute name="scheme">
        <value type="string"></value>
      </attribute>
      <empty/>
    </element>
  </define>

  <define name="presentation">
    <element name="Presentation">
      <ref name="channels-manager"/>
      <ref name="root-node"/>
    </element>
  </define>

  <!-- Channels manager is fixed; we always have the same three channels:
  obi.audio, obi.text and obi.annotation. Use "string" instead of "token"
  for values in channels because I am not sure whether XUKing in normalizes
  the values. -->
  <define name="channels-manager">
    <element name="mChannelsManager">
      <element name="ChannelsManager">
        <element name="Channel">
          <attribute name="id">
            <value type="string">CHID0000</value>
          </attribute>
          <value type="string">obi.audio</value>
        </element>
        <element name="Channel">
          <attribute name="id">
            <value type="string">CHID0001</value>
          </attribute>
          <value type="string">obi.text</value>
        </element>
        <element name="Channel">
          <attribute name="id">
            <value type="string">CHID0002</value>
          </attribute>
          <value type="string">obi.annotation</value>
        </element>
      </element>
    </element>
  </define>

  <!-- The root node is always a plain CoreNode with no property; children
  nodes are section nodes. Obi can save files with no content, but those are
  not valid DAISY. -->
  <define name="root-node">
    <element name="mRootNode">
      <element name="CoreNode">
        <element name="mProperties">
          <empty/>
        </element>
        <element name="mChildren">
          <zeroOrMore>
            <ref name="section-node"/>
          </zeroOrMore>
        </element>
      </element>
    </element>
  </define>

  <!-- Obi-specific elements and attributes are in the Obi namespace -->
  <div ns="http://www.daisy.org/urakawa/obi">

    <!-- Sections have some text (see section-properties), then some phrase
    children followed by section children. Normally for a valid DAISY book,
    a section should have at least a phrase child (the first phrase being the
    section title) but Obi will happily save XUK files with empty sections,
    or sections with no phrases. -->
    <!-- We assume that the audio for the section in the navmap is the first
    clip of the first used phrase. Obi will try to make sure that it makes
    sense. -->
    <define name="section-node">
      <element name="section">
        <ref name="used-attr"/>
        <ref name="section-properties"/>
        <ref name="section-children"/>
      </element>
    </define>

    <!-- Phrases are leaves in the tree but they have more complex
    properties. -->
    <define name="phrase-node">
      <element name="phrase">
        <ref name="used-attr"/>
        <ref name="phrase-properties"/>
        <element name="mChildren" ns="http://www.daisy.org/urakawa/xuk/0.5">
          <empty/>
        </element>
      </element>
    </define>

    <!-- This attribute is optional; if unset, it is considered as being true.
    Nodes with a value of false are not exported, they are used only while
    authoring the project. -->
    <define name="used-attr">
      <optional>
        <attribute name="used">
          <choice>
            <value type="string">True</value>
            <value type="string">False</value>
          </choice>
        </attribute>
      </optional>
    </define>

    <!-- Page number for phrases -->
    <define name="phrase-page-property">
      <optional>
        <element name="page">
          <attribute name="num"/>
        </element>
      </optional>
    </define>

  </div>

  <define name="section-properties">
    <element name="mProperties">
      <element name="ChannelsProperty">
        <element name="ChannelMapping">
          <attribute name="channel">
            <value type="string">CHID0001</value>
          </attribute>
          <element name="TextMedia">
            <text/>
          </element>
        </element>
      </element>
    </element>
  </define>

  <define name="section-children">
    <element name="mChildren">
      <zeroOrMore>
        <ref name="phrase-node"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="section-node"/>
      </zeroOrMore>
    </element>
  </define>

  <define name="phrase-properties">
    <element name="mProperties">
      <element name="ChannelsProperty">
        <ref name="phrase-audio-channel"/>
        <ref name="phrase-annotation-channel"/>
      </element>
      <ref name="phrase-page-property"/>
    </element>
  </define>

  <!-- The sequence may be empty when no audio is set. In this case, the
  phrase should not be exported. -->
  <define name="phrase-audio-channel">
    <element name="ChannelMapping">
      <attribute name="channel">
        <value type="string">CHID0000</value>
      </attribute>
      <element name="SequenceMedia">
        <attribute name="type">
          <value type="string">AUDIO</value>
        </attribute>
        <zeroOrMore>
          <element name="AudioMedia">
            <attribute name="src"/>
            <!-- These can be specified with a pattern. -->
            <attribute name="clipBegin"/>
            <attribute name="clipEnd"/>
          </element>
        </zeroOrMore>
      </element>
    </element>
  </define>

  <!-- This is an annotation and is not exported to the DAISY book. -->
  <define name="phrase-annotation-channel">
    <element name="ChannelMapping">
      <attribute name="channel">
        <value type="string">CHID0002</value>
      </attribute>
      <element name="TextMedia">
        <text/>
      </element>
    </element>
  </define>

</grammar>

<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_CommentPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
# Mockup of Obi 1.0 manual

`$Id$`

<div id="toc">Table of contents</div>

The idea is that we document features first, then implement them. This way
we can better test if they behave as planned and we don't have to document
them later. This file can be the basis for the proper help page (with
screenshots, with more end-user hand-holding) with the objective of reusing
as much of it as possible.

## What is Obi?

## The work area

The work area shows the whole project at once and allows the user to focus
on specific parts while editing, recording and testing playback of a
project.

Sketch of the work area:

<pre>
+--------------------------------------------------------------------------+
|                         |                                                |
|         TOC view        |                   Strip view                   |
|                         |                                                |
|  * My book              |  +---------------------------------------------|
|    * First section      |  |                                             |
|    * Second section     |  |  My book                                    |
|      * First chapter    |  |                                             |
|      * Second chapter   |  |  +------------------------------------------|
|    * Third section      |  |  |            |           |             |   |
|                         |  |  |  Audio     |  Audio    |  Audio      |  A|
|                         |  |  |            |           |             |   |
|-------------------------|  |  +------------------------------------------|
|                         |  |                                             |
|        Metadata         |  +---------------------------------------------|
|                         |                                                |
|  Title: My book         |  +---------------------------------------------|
|  Author: Obird          |  |                                             |
|                         |  |  First section                              |
|--------------------------------------------------------------------------|
|                                                                          |
|                               Transport bar                              |
|                                                                          |
+--------------------------------------------------------------------------+
</pre>

### Metadata view

The metadata view is shown as a sidebar of the strips view. If the TOC view
is shown, the metadata view is shown underneath the TOC view as in the
figure above. The 

### The table of contents view

Hierarchy of the project. Synchronized with the Strip view. (This could be
an option.)

### Strips view

Shows strips and blocks.

#### Strips

Strips are containers for blocks and map one-to-one with sections. They are
composed of:

* The name of the section (same as shown in the TOC view, changing one
changes the other.)

* The thumbnail of the section image (can be shown full-size in a modal
window, and/or in the sidebar Ã  la iTunes?)

* The audio blocks, see below.

Unused strips are kept in the project but 

Strips may be indented/collapsed?

#### Blocks

__Block classes and properties.__ There are three basic kinds of blocks:

1. _Plain audio blocks_ are the default kind of audio block.

2. _Page blocks_ are used to represent page numbers. A page block has a page
number that can be edited and searched for. The audio data of a page block
is usually a reading of this page number.

3. _Heading blocks_ are used to represent the audio label of sections in the
table of contents. There can be only one heading block per section, although
it does not have to be the first block.

Additionally, the user may create custom classes of blocks (for instance
producer notes, sidebars, etc.) which behave like regular blocks but can be
easily searched or manipulated as a class rather than block by block. This
is also useful for working with skippable blocks, as described below.

Blocks can then the following properties; properties are either set (which
means that they do apply to this block) or unset (they do not.)

* The _used_ property means, when set, that the block is indeed part of the
book. By defaults, blocks are used (_i.e._ this property is set.) Unused
blocks will not play during normal playback of the book and will not be
exported to the final DAISY books. Unused blocks can also be removed all at
once during project cleanup.

* The _skippable_ property means, when set, that this block can be
automatically skipped during playback. This property is generally used with
pages and custom blocks, so that for instance all producer notes in the book
can be skipped by default. DAISY players allow the reader to ultimately decide
whether they want these to be skipped or not.

* The _escapable_ property means, when set, that playback can escape

* The _empty_ property means, when set, that the block has no actual
content; it is just a placeholder. This can happen when importing a project,
or failing to read sound files from existing projects. The user can also
create empty blocks explicitly. This property is automatically set or unset
by Obi.

There is an additional property which is an _annotation string_. This is
purely for authoring and can be used to set short annotations on blocks
(_e.g._ ``fix this'' or ``to be recorded later'').

Lastly, there is a special kind of block which instead of containing an
audio phrase, contains other blocks. We call this a _container block_. All
blocks in the container block share the properties of the container. As an
example, a container block can be used to group together several phrase
blocks to have an audio label consisting of several phrases (remember that
there can only be a single heading block per section; in that case the
container block is marked as being the heading block.)

There are other examples of the use of container blocks, that can be marked
as escapable; for instance a list of phrases or an audio table (container
blocks can contain other container blocks, so a table can be a list of rows
which are themselves lists of phrases.)

__Display.__ A block is displayed as a colored rectang{

### Transport bar

Used for recording and QA playback. Buttons are overloaded for recording;
for instance, the next phrase button introduces a new phrase. Whether this is
sufficient remains to be seen. An idea would be to modify the toolbar when
recording.

### VU meter

Has its own window, or is part of the transport bar (text/small version.)

## Editing metadata

## Editing structure

## Editing contents

### Page numbering

## Editing audio

## Audio playback and recording

### Playback

### Recording

## Saving and exporting

### XUK/.obi format

### Cleaning up

### Exporting to DAISY 3

### Using the DAISY Pipeline for import/export

## User profile and preferences

Obi feature list / Iteration 1
$Id$


Introduction

  This document lists the features of the application and their completion
  status. They are numbered by category from A to G. Numbering is arbitrary.

  Don't forget about:

  - Physical vs. logical edits
  - Commands


A. Project/User management

  * Support for a single project at once.
  * Support for a single user.
  * The user profile helps with bibliographic metadata (see E.) and some
  preferences, such as recording levels (see C.), file management, etc.
  * A project on disk will consist of a XUK file and a directory containing
  the audio files and extra data.

  A.1. Create/import/export

  A001: Create a blank project.
        An new, empty project is created. Try to fill as much metadata as
        possible from the user profile. A project directory is created to
        contain all data.

  A002: Open an existing project from a XUK file.
        The XUK file is read. Assuming that it is correct (the parser should
        be forgiving anyway), a project directory is created if it couldn't
        be found.

  A003: Save the current project to a XUK file.
        Actually we probably need a directory where the audio files are
        stored (see Audio

  A004: Clean the current project.
        Remove all unreferenced audio and authoring cruft. This is done
        through the asset manager, but in this iteration it is outside of
        the scope of the toolkit (so no worry for the fa√ßade API at this
        stage.)

  A.2. User profile

  * Have a user profile. The user profile allows to fill the bibliographic
  metadata easily. Generate the author name, publisher (author's
  organization), and language. The user is also the default narrator and
  producer.

  A005: Have a name for the user.
        The user inputs her name. This can probably be obtained from the OS?
        This is editable and optional.

  A006: Have an organization for the user.
        The user inputs the name of her organization. This is editable and
        optional.

  A007: Have a language for the user.
        Choose from a list, and transform the value to an ISO string. This
        can also be obtained from the OS probably.

  A008: Have an identifier template.
        Generated an identifier template from the user's name/organization.
        Example: tpb-mg-xxxxx, where xxxxx is replaced by a number
        increasing with each project. Editable but not optional. Can also be
        generated randomly if there is no information (e.g. xPr7uW-xxxxx.)
        

B. Strips management

  * The project has a list of strip.
  * Each strip corresponds to exactly one navpoint.
  * The strips are in the same order as the navpoints.
  * The strips are indented by the level of their corresponding navpoint.

  B.1. Strips and blocks (in general)

  * A strip has an editable label.
  * A strip has a selection handle to select the whole strip.
  * A strip has a sizing handle.
  * A strip has blocks of data that are all of the same kind.
  * There are three kinds of strips:
      1. Continuous: data has an intrisic duration (e.g. audio, video.) The
      beginning of a continuous block can be used as a synchronization
      point. Visual note: the size of a block is proportional to its length.
      There can be gaps between blocks but they cannot overlap.
      2. Discrete: data has no instrisic duration (e.g. structure item,
      text, image.) Labels are also discrete, but they are not part of the
      presentation. Blocks can be placed anywhere in the strip, but they are
      "attracted" to synchronization point. Visual display: blocks have a
      size that is proportional to the content that they display. They can
      be placed anywhere in the strip and can overlap (i.e. there may be
      several lines of blocks in the strip.)
      3. Empty: there is no data (e.g. scale strips.)
  * A block can be synchronized, unsynchronized, or external (not part of
  the presentation, but still in the project, like unused audio and labels.)
  * Specific strips can override the behavior described here. Some features
  do not apply to this iteration.

  B.1.1. Strips

  B001: Create a new empty strip.
        A new strip is created with a given label. It has no data. A default
        label can be provided (e.g. "Audio strip n".)

  B002: Delete a strip.
        The strip and its data are removed from the project, provided that
        this leaves the project in a valid state.

  B003: Edit label.
        The label must not be an empty string.

  B.1.2. Continuous blocks

  B004: Append continuous block.
  B005: Insert continuous block.
  B006: Delete continuous block.
  B007: Exclude a continuous block.
  B008: Include a continuous block.
  B009: Move continuous block.
  B010: Split continuous block.
  B011: Merge continuous blocks.
  B012: Edit data in continuous block.

  B.1.3. Discrete blocks

  B013: Append discrete block.
  B014: Insert discrete block.
  B015: Delete discrete block.
  B016: Exclude a discrete block.
  B017: Include a discrete block.
  B018: Move discrete block.
  B019: Align discrete block with synchronization point.
  B020: Edit data in discrete block.

  B.2. Container strips (= par)

  * The container strip is a special kind of strip, as it contains other
  strip, but not blocks proper.
  * A container strip always contains a navigation strip.
  * A container strip always contains a single audio strip.
  * A container strip may contain a single label strip.
  * A container strip may contain a single scale strip.
  * We put these restrictions so that we avoid cluttering the interface and
  confusing the user.
  * The container strip shows synchronization points across all strips
  corresponding to the beginning of every continuous block in the strip.
  * Strips themselves are not included/excluded, only their blocks.

  B021: Create a new container strip from an existing navigation point.
        A new container strip is created. It initially contains a navigation
        strip (see B026 below) and an audio strip (see Bxxx below.) 

  B022: Add a label strip.
        If the strip has no label strip yet, a new label strip is created
        and added to the container.

  B023: Delete the label strip.
        The label strip can be removed at any time.

  B024: Add a scale strip.
        If the strip has no scale strip yet, a new scale strip is created
        and added to the container.

  B025: Delete the scale strip.
        The scale strip can be removed at anytime.

  B.3. Navigation strips and navigation items (navpoint and pagetarget)

  * The navigation strip contains discrete navigation items.
  * A navigation strip has a single navpoint (corresponding to a navpoint in
  the NCX.), then zero or more pagetargets. Navtargets appear only in the
  NCX part.
  * The navpoint cannot be deleted or excluded from the project.
  * The navpoint is always aligned with the first synchronization point of
  the strip. If there is no synchronization point available, it appears at
  the beginning of the strip.

  B026: Create a navigation strip from an existing navigation point.
        A new navigation strip is created. It has a navpoint at its
        beginning and no other target yet.

  B023: Append a page target.
        A new page target is added to the strip after the last navigation
        item at the first synchronization point available, or somewhere
        after the last item if there is no such point. The page is not
        marked as synchronized.
        
  B024: Delete a page target.
        A page target can always be deleted.

  B025: Exclude a page target.
        A page target can always be excluded from the project.

  B026: Include a page target.
        A previously included page target can always be included back into
        the project.

  4. Audio strips and phrases

  * The audio strip contains audio data, shown as a wave form. The wave form
  is segmented into phrases, either manually or automatically. There are
  three kinds of phrases:
    1. Synchronized: the phrase is synchronized with text (in this
    iteration, that means either a navpoint or a page.)
    2. Unsynchronized: a simple phrase that is part of the book but not
    synchronized with anything. It is accessible through playing and local
    navigation.
    3. Unused: the phrase is kept in the project but is not part of the
    book.
  * The beginning of every phrase is a potential synchronization point.

  
  Bxxx: Create a new audio strip.
        A new, empty audio strip is created.

  5. Label strips

  * Label strips are discrete.
  * Label blocks are external.

  Bxxx: Create a new label strip.

  Bxxx: Delete a label strip.
        A label strip can always be deleted.

  Bxxx: Append a new label.
        A new label is created and appended to the strip. The exact location
        of the label is irrelevant but it should appear after all other
        labels in the strip.

  6. Scale strips

  * Scale strips are empty.

  7. Strip manager

  * The strip manager maintains a list of strips.

  Bxxx: Append a new container strip.
        A container strip is created. It is added at the end of the list of
        strips. Before the strip is created, a new navpoint is appended (see
        NCX below to see how new navpoints are created.)

  Bxxx: Insert a new strip.
        The strip is inserted at a position chosen by the user.

  Bxxx: Delete a strip.


C. Audio engine and asset manager

  * See the AudioBackEnd project for details.
  * Events are provided by C#.

  C.1. Assets, Audio assets and Asset manager

  * In this iteration there are only audio assets.

  C.2. Audio player

  C.3. Audio recorder

  C.4. VU Meter


D. NCX editor

  * The NCX editor has a tree view of the table of contents (navmap and
  navlists) of the project.

  D.1. NCX metadata

  D.2. Navmap

  D.3. Page list

  D.4. Navlists


E. Metadata editor and viewer

  * Metadata is either editable or generated. The editable metadata is
  edited by the user, using its profile or other sources for default values
  when applicable. The generated metadata can be viewed.

  E.1. Dublin Core metadata
  
  * Skipped: dc:Type, dc:Coverage.

  E001: Unique identifier for the project.
        We can generate an identifier automatically (from the user template)
        by incrementing a counter. This value is used for dc:Identifier and
        dtb:uid for SMIL files (this is probably handled by DMFC when it
        generates the files?)

  E002: Edit project title.
        For simplicity, the project title should be unique; the presentation
        itself can have several titles (in different languages presumably.)
        The project title is just a string, it has no set value for its
        language.

  E003: Edit presentation's titles.
        [dc:Title] Required.
        Get the first title from the project's title. The language is then
        unspecified, the user will have to specify a language herself,
        otherwise it will inherit its language value following XML's rules
        in the final .opf document. The user is also free to add alternative
        titles.

  E004: Edit the creators.
        [dc:Creator] Required. Other attributes: role and file-as.
        This concerns the creator of the contents of the book, this is not
        necessarily the user of the software so leave this blank by default
        (but require at least one value to be input.)

  E005: Edit the subjects.
        [dc:Subject] Optional.

  E006: Edit the descriptions.
        [dc:Description] Optional.

  E007: Edit the publishers.
        [dc:Publisher] Required.
        Since this is required, it defaults to the user's organization.

  E008: Edit the contributors.
        [dc:Contributor] Optional. Other attributes: role and file-as.

  E009: Edit the date.
        [dc:Date] Required. Other attributes: event. Format: YYYY[-MM[-DD]]
        Can use the creation's day date; use only one value and the
        dtb:revisionDate elements instead.

  E010: View format of the presentation.
        [dc:Format] Required. This cannot be changed, and must be "ANSI/NISO
        Z39.86-2005". But this is shown if necessary.

  E011: Set identifiers.
        [dc:Identifier] Required. Optional attribute: scheme. The first
        identifier is uneditable and synchronized with the project's
        identifier. In DTB terms, this identifier has the id "uid" and is
        referenced in the root element--I am not sure what it becomes in the
        XUK file format. Other identifiers can be added.

  E012: Set sources.
        [dc:Source] Optional.

  E013: Set languages.
        [dc:Language] Required. Get the first language from the user's
        profile. Allow only to input valid values.

  E014: Set relations.
        [dc:Relation] Optional.

  E015: Set rights.
        [dc:Rights] Optional.

  E016: Change the language of any piece of (DC) metadata.
        All meta attributes can have a language attribute (xml:lang.)

  E.2. DTB metadata

  E017: Set source date.
        [dtb:sourceDate] Optional, not repeatable. YYYY[-MM[-DD]].

  E018: Set source edition.
        [dtb:sourceEdition] Optional, not repeatable.

  E019: Set source publisher.
        [dtb:sourcePublisher] Optional, not repeatable.

  E020: Set source rights.
        [dtb:sourceRights] Optional, not repeatable.

  E021: Set source title.
        [dtb:sourceTitle] Optional, not repeatable.
        Warn if same as project title or one of the presentation's titles.

  E022: View multimedia type.
        [dtb:multimediaType] Required, not repeatable.
        Always "AudioNCX".

  E023: View multimedia content.
        [dtb:multimediaContent] Required, not repeatable.
        Always "audio,text".

  E024: Set narrators.
        [dtb:narrator] Required, repeatable.
        First narrator defaults to user name.

  E025: Set producers.
        [dtb:producer] Required, repeatable.
        First narrator defaults to user organization.

  E026: Set completion date.
        [dtb:producedDate] Required, not repeatable. YYYY[-MM[-DD]]
        Default to the day when the project is saved.

  E027: Increase revision, update revision date and description
        [dtb:revision] Optional, not repeatable.
        [dtb:revisionDate] Optional, not repeatable. YYYY[-MM[-DD]]
        [dtb:revisionDescription] Optional, not repeatable.
        Increase revision by one from previous revision (or start from 1)
        and set the default value of the revision to the current date.

  E028: View total time.
        [dtb:totalTime] Required, not repeatable. SMIL timing value.
        This value is auto-generated by the asset manager.

  E029: View audio format.
        [dtb:audioFormat] Optional, repeatable.
        Only value at the moment: "Linear PCM - RIFF WAVE format" (or should
        it be the MIME type "audio/xwav"?)


F. GUI

  F.1. Project and user management
  F.2. Commands
  

G. Bugs and features

  * To be maintained during development

  G.1. Bugs
  G.2. Missing iteration 1 features
  G.3. Features for future iterations

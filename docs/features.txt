Obi feature list for iterations 1 and 2.
$Id$

This is an edited version of the feature list decided in Amsterdam in July
2006. The plan for iteration 1 is to reach version 0.5 of the application,
where most backend features are implemented (i.e. the application is
functional) but the graphical interface is deliberately unpolished (e.g. no
display of waveform.) Version 1.0 is to be reached by iteration 2, where the
goal is to deliver a fully-usable and documented beta version of Obi with a
somewhat rich, but accessible, GUI.


Iteration 1 Target

Version 0.5 focuses on audio rather than graphics, to emphasize the audio
aspect and the accessibility of the application (and also shorten
development time.) This will also serve as a testbed to see how abstract the
graphical representation of elements can be.

High-level feature list:

  - NCX-only book editing.

  - NCX editing: the table of contents can be viewed as a tree (which will
    become the NCX once exported to DAISY) and contains all the headings. A
    text label can be attached to the heading (only one at the moment,
    although the Z spec allows several.) This is the only text content of
    the book.

  - Page numbers can be inserted directly in the book, they do not appear in
    the table of contents; probably a special menu that allows to navigate
    them, insert/delete them, etc.

The application has two main view of the book:

  - Table of contents is a tree view.

    Each node in the tree is a section, child nodes are subsections.
    The tree view represents the top of the actual core tree, without all
    the phrases.

    This view behaves like a tree: deleting a section node will delete all
    of its descendants.

    This view allows the editor of the book to focus on the structure.
    No recording takes place in this view, but when audio assets are
    associated with headings, they should be playable here.

  - Book content is a strip view.

    Each section is represented in a strip. The strip view shows a flat
    list of strip, just like a book would be. A section strip contains all
    the contents of the section, not just the heading--every phrase is
    there.

    A section strip itself contains two strips: an audio strip and a
    synchronization strip.

    The audio strip contains phrases, represented as a block. Each phrase is
    an audio asset, which can be split, merged with another asset, deleted,
    cut, copied, pasted and moved. There are no gaps between blocks. In
    version 0.5, a block is a black box--we don't see what's inside. Blocks
    can be annotated; the annotation is a string ot text that is displayed
    in the block. It can be the text of the phrase ("The tsunami will hit
    several times. Zaboom! Zaboom!") or a short description ("jack speaks
    1/3".) Annotations are not exported to a DAISY book but are saved by Obi
    for future uses. An audio strip contains zero or more audio blocks.

    The synchronization strip is a strip where we add heading (exactly one
    per strip) and pages (zero or more.) The two strips run parallel and
    every phrase beginning creates a synchronization point. Having a
    synchronization item (heading or page) at a synchronization point
    effectively synchronizes the item with the phrase: this will give an
    audio phrase for the heading or the page number. There can be zero or
    one item at every synchronization point.

    Phrases can have three states: synchronized, regular, unused. Regular
    phrases are unsynchronized. Unused phrases are kept in the project but
    will be deleted when cleaning up. Heading phrases (i.e. synchronized
    with a heading) cannot be marked as unused but page phrases can. When
    un-marked, they become synchronized again.

  - Synchronization of a heading: there is always a heading block in the
    synchronization strip. Its label is the same in the tree and in the
    synchronization strip. It can be changed from either. The heading block
    can be moved to any free synchronization point in the strip.

  - Synchronization of a page: the page is inserted at the selected block's
    synchronization point. If there is no selected block or the selected one
    is not free, use the first following free one. A section strip must be
    selected. Page blocks can be moved to any free point. Page blocks can be
    deleted. Default value: 1 higher than previous.

  - Audio management.

    The application is able to import audio files (WAVE only) into an audio
    strip or record live audio. Insertion of audio happens at the end of an
    audio or after a selected phrase. Audio is never overwritten--it has to
    be explicitly deleted.

  - Metadata: the metadata is very simple and does not include the full set
    of metadata mandated by the DAISY standard.

  - QA playback: Obi implements its own crude QA player. Can play the book,
    a complete strip, or a single phrase. When playing a book or a strip,
    the unused blocks are skipped. Possibility to play at higher or lower
    speed, but pitch changes. Three time counters: book time, strip time,
    asset time.

  - Markers: phrase markers can be dropped on the fly while recording to
    create new phrase blocks.

  - Keyboard navigation with single key.


Timeline sketch for July 10th--August 18th (end of iteration 1)

07/10 Marisa and Markus rejoin the application team.
07/11 Marisa and Julien do some coding in Amsterdam.
07/17 Julien is back in Tokyo, works on tree view and strip manager shell
        with Zaboom in empty strips.
07/24 Marisa works on tree view, Julien on strip view.
07/28 Avneesh and Suman deliver milestone 2 of audio backend.
07/31 Markus and Julien in Delhi work mainly on audio and asset manager with
        Avneesh and Suman.
08/07 Julien back in Tokyo works on something or other.
08/07 Markus back in Stockholm on usability, such as keyboard navigation and
        manual.
08/18 Julien releases version 0.5 of the application then leaves on
        vacation.


Iteration 2

  - Actual DAISY metadata. This is not hard to but there are many
    attributes to support. We can use a grid view: left is popup with name,
    other fields for content.

  - Some DAISY 3 features: navlist maybe (probably not), skippable structures
    (doable), resources (really not sure.) Those missing features can be part
    of iteration 3; version 1.5 could add missing features, version 2 could be
    addition of text.

  - Graphical audio editing: we display the waveforms inside the audio
    blocks, and allow mouse selection for easier manipulation by sighted
    users. This will be optional so that we can have a very simple
    non-visual editor if we want to. Add zoom/unzoom, etc.

  - Strips can be collapsed to unclutter the strip view. Collapsing means we
    hide the contents and keep only the label of the section strip.

  - Search function: all text contents (section labels, annotations,
    metadata) can be searched.

  - DAISY 3 export: natively export a DTB fileset from the current project.

  - AMIS as a QA player.

  - Autonumbering of pages.

  - Audio markers: on the fly page markers.


Future features:

  - DAISY 2/3 import/export through DMFC.

  - Text: unformatted text can be done quite easily, but synchronization
    with a DTBook document (other than extracting the structure) is
    difficult.

  - Audio: support for compressed audio (e.g. MP3) and all of DAISY mandated
    formats. More functionality (e.g. change volume, filters, time
    stretching...) Add an audio scratchpad: at the moment, all audio content
    must be created through an audio strip; if we want to record/add audio
    contents it *must* go into an existing part of the book. The scratchpad
    would just keep audio assets that the project wants to use at some
    point.

  - Audio markers: on the fly headings.

Obi feature list for iterations 1 and 2.
$Id$

This is an edited version of the feature list decided in Amsterdam in July
2006. The plan for iteration 1 is to reach version 0.5 of the application,
where most backend features are implemented (i.e. the application is
functional) but the graphical interface is deliberately unpolished (e.g. no
display of waveform.) Version 1.0 is to be reached by iteration 2, where the
goal is to deliver a fully-usable and documented beta version of Obi.


Iteration 1 Target

Version 0.5 focuses on audio rather than graphics, to emphasize the audio
aspect and the accessibility of the application (and also shorten
development time.) This will also serve as a testbed to see how abstract the
graphical representation of elements can be.

High-level feature list:

  - NCX-only book
  - NCX editing: the table of contents can be viewed as a tree (which will
    become the NCX once exported to DAISY) and contains all the headings. A
    text label can be attached to the heading (only one at the moment,
    although the Z spec allows several.) This is the only text content of
    the book.
  - Page numbers can be inserted directly in the book, they do not appear in
    the table of contents. Although there will probably be a special dialog to
    manage them, at least for QA purposes. At this point, it looks like page
    numbers will be shifted to iteration 2. No navlist, no skippable
    structures.

The application has two main view of the book:

  1. Table of contents is a tree view.
     Each node in the tree is a section, child nodes are subsections.
     The tree view represents the top of the actual core tree, without all
     the phrases.
     This view behaves like a tree: deleting a section node will delete all
     of its descendants.
     This view allows the editor of the book to focus on the structure.
     No recording takes place in this view, but when audio assets are
     associated with headings, they should be playable here.

  2. Book content is a strip view.
     Each section is represented in a strip. The strip view shows a flat
     list of strip, just like a book would be. A section strip contains all
     the contents of the section, not just the heading--every phrase is
     there.


Iteration 2

  - Some DAISY 3 features: pages (a must), navlist (probably not), skippable
    structures (doable), resources (really not sure.) Those missing features
    can be part of iteration 3; version 1.5 could add missing features,
    version 2 could be addition of text.



---

Rough notes below:


** Application team **

   main view is strip view, where every strip
	     container strip (corresponds to one heading)            
	       audio strip
	       navigation strip
	    so for every headings we will have a different container strip
	    in the strip view, they will be ordered the way the headings are ordered
	    we could indent these; non visually we can go up and down
   inside container strip: two strips
      audio strip: flat strip of audio blocks (list of phrases)
        three kinds of phrases:
        	synchronization phrases: tied to navigation
        	non-synch phrases (just next and previous)
        	not-part-of-book phrases
        phrases should just be boxes with text label
      label strip
        parallell to audio strip
        small marker that tells us; this is a heading, page etc
        Has exactly one heading and 0..n pages
   Should we draw the waveform? Not this time. Iteration two (january) should be version 1,
   which will include this.
   Where do we put the text that actually should go into the book?
   In the labels in the structure strip.

   Horizontal Zoomability: in.
   Also collapse of each strip


   add new things in toc or tree
   record data and edit data
   import wavefiles, just appends to the end of the selected strip 



   Chicken and egg: create new strip needs a heading, heading needs a strip
     node; label with default text, null audio, XmlProperty

   "ScratchPad" for yet unassigned audio iter2; in iter1 alwats create a new heading


   Navigation: 
     Decision to use XmlProperty + TextChannel for navigation (ncx:pagenum and ncx:hx)

   **Structure Editing**
   Treeview:
     only place to create new headings
     +all features of strip
   StripView
     move, indent, outdent, delete, copy, paste     
   Metadata
     daisy metadata by version 1 (iter 2)
     a grid view: left is popup with name, other fields for content

   **Audio Editing**
   Record/import always appends to *end* in currently selected audio strip, is always a new phrase 
   Insert: append to adjacent new block or by default at end of strip
   AssetManager: split merge move
   Phrase detection 3 params: threshold, min length silence, leading space before beginning
   Mark blocks as used or unused, cannot do this with heading block. However with pages use/unused is possible
   When playing book or strip, unused block not played, when playing single block, unused is played.

   ** structure strip editing **
   has to be one heading block:
     change its label
     move it to a different synchronization
   pages:
    select a strip
    insert page (at selected block, if a block is not selected fallback: to first found free synh point))  
    page blocks can be moved to a different free synch point
    page can be deleted
    when created, created with default value one higher than prev
    autonumber in iteration two


   **Playback operations**
   play only this block 
     blockmove backward and forward between blocks
     timemove  
   play whole strip

   CrudeQA
     play the book, have full navigation
     playback speed w chipmunk    
     markers? none for the moment; iter2

   Three time counters
     book time
     strip time
     asset time

   Markers
     iteration1: phrase marker (does on-the-fly cut)
     iteration1: page marker (adds XmlProperty to node, else lke phrase marker)
     iteration2: heading-on-the-fly marker

   Search: 
     we are missing a pagelist: will do a simple search for page dialog

   Keyboard interface:  
     prefer single key shortcuts
     disprefer mousing (learn the fucking shortcut paperclip)
     prefer menu equivalents

   Synchronization:
       Does the toolkit need to emit events?

    ** Project **
      input/output device: done by obi
      volume slider: hopefully in India

  When is everyone available
    Julien: every day until 18th
    Marisa: starting 24th
    Markus: starting india
	
  How to split up the work
 	Avneesh & Suman currently do iteration two now-->next two weeks 
	  	asset manager refactorting
	  	moving to nondestructive edit
	After that, more asset manager refactoring
	More robustness, they dont through enough exceptions

	Separate what happens 
	  inside strips
	  in stripmanager
	  in tree

---

Timeline sketch for July 10th--Auguts 18th

07/10 Marisa and Markus rejoin the application team.
07/11 Marisa and Julien do some coding in Amsterdam.
07/17 Julien is back in Tokyo, works on tree view and strip manager shell
        with Zaboom in empty strips.
07/24 Marisa works on something?
07/28 Avneesh and Suman deliver milestone 2 of audio backend.
07/31 Markus and Julien in Delhi work mainly on audio and asset manager with
        Avneesh and Suman.
08/07 Julien back in Tokyo works on something or other.
08/07 Markus back in Stockholm on usability, such as keyboard navigation and
        manual.
08/18 Julien releases version 0.5 of the application then leaves on
        vacation.

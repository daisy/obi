1. Transport bar [A, J]

1.1 Play/Pause/Stop: mostly working. If splitting when playing, play in the
split dialog from the current time; when paused, use this as initial value
for splitting (can always go back in asset in any case.) [A]

1.2 Next/Previous buttons: finish section navigation; when stopped, start
playback to allow keyboard navigation [J]

1.3 Time display: change between elapsed time in phrase, elapsed time in
book/selection, remaining time in asset, remaining time in book/selection.
Use the "display" button in the transport bar. Fix smoothness of time
display. [A] Start the book elapsed time at the correct position when not
starting from the first asset. [J]

1.4 VU meter: graphic VU meter seems OK, add text VU meter to transport bar:
non-editable text boxes with labels and an overload button that activates
when overload was detected in either channel (pressing the button resets
it.) [J to add the controls, then A]

1.5 Record: the button currently doesn't do anything, so make it bring the
record dialog. Remove the autocommit feature (interesting but too early).
AUtomatically start listening when clicking the record button. [A] GUI
integration of section and page creation. [J]

1.6 Flag a phrase while recording (maybe auto-add annotation?)


2. Core node subclassing [M, J]

This is in progress from Marisa, so we'll refine the following tasks:

2.1 Replacing CoreNode with SectionNode and PhraseNode in events. [M]

2.2 Replacing CoreNode with SectionNode and PhraseNode in commands. [M]

2.3 Replacing CoreNode with SectionNode and PhraseNode in user controls. [M]

2.4 Update XUK export and Relax NG grammar for Laust [M, J]

2.5 Clean up code to remove all unnecessary unsubclassing stuff; verify
consistency of child ordering for SectionNodes. [M, J]

2.6 Outstanding issues: 
  + restore section movement functions
  + am I creating PhraseNodes and SectionNodes correctly, or is there a
  factory somewhere?
  + Annoying: We can't assume a SectionNode has a SectionNode as its parent,
  since it could have Root as parent instead.


3. New features of Obi

Since this comes after 1 and 2, we will see who has time for these tasks.
These can be easily reordered as they don't all depend on each other. If a
task cannot be done in Delhi, we must assign them with owner and timeline.

3.1 Used and unused blocks, with empty audio asset.

3.2 Header block [depends on 3.1]

3.3 Full DAISY metadata; at least a good method for metadata input and
checking.

3.4 Cut/copy/paste for sections, blocks, pages, annotations.

3.5 Search text

3.6 Go to page and page autonumbering.

3.7 Split and merge sections [depends on 2]

3.8 Daisy export [depends on Laust]


4. Robustness and accessibility

4.1 Tests with screen reader and suggestion for fixes. [A] Remove tabbing
from strip manager [J]

4.2 List outstanding bugs and prioritize them. [all] We could start using
the tracker?

4.3 Macros (list of commands) for semi-automatic testing.
